{
  "name": "douban2tg",
  "nodes": [
    {
      "parameters": {},
      "id": "2e9b0a1b-b0e9-4ec9-a0fc-2c75153c0bbe",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "url": "https://www.douban.com/feed/people/hhx2002/interests"
      },
      "name": "RSS Feed Read",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1,
      "position": [
        680,
        580
      ],
      "id": "52e28f74-4505-4b71-b26d-514baa3203d8"
    },
    {
      "parameters": {
        "functionCode": "/* only return new items */\nconst staticData = getWorkflowStaticData('global');\nconst lastItemId = staticData.lastItemId;\n\nconsole.log('lastItemId', lastItemId);\nconst firstItem = items[0];\nlet newItems = [];\n\nfunction getId(item) {\n  return item.json.guid;\n}\n\nif (lastItemId) {\n  for (const item of items) {\n    if (getId(item) === lastItemId) {\n      break;\n    }\n    newItems.push(item)\n  }\n} else {\n  newItems = [firstItem]\n}\n\nstaticData.lastItemId = getId(firstItem)\nreturn newItems.reverse();"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1020,
        580
      ],
      "id": "edabcf49-32f0-42f8-a8f3-643455632116"
    },
    {
      "parameters": {
        "chatId": "@hutalk",
        "text": "={{$json[\"tgTitle\"]}}\n\n{{$json[\"link\"]}}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        1180,
        740
      ],
      "id": "e0e56d80-8db5-4a0e-8767-b6a2ca042b60",
      "credentials": {
        "telegramApi": {
          "id": "CcgeVvRilGdDx3uG",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "interval": 60,
        "unit": "minutes"
      },
      "name": "Interval",
      "type": "n8n-nodes-base.interval",
      "typeVersion": 1,
      "position": [
        460,
        740
      ],
      "id": "bcf8944b-abeb-42a9-b95f-f9d48758c6eb"
    },
    {
      "parameters": {
        "functionCode": "/* filter items */\nconst newItems = [];\n\nconst SYMBOL_MOVIE = 'ðŸ“º'\nconst SYMBOL_BOOK = 'ðŸ“–'\n\nconst tagInfoMap = {\n  watched: { re: /çœ‹è¿‡/, symbol: SYMBOL_MOVIE },\n  watching: { re: /åœ¨çœ‹/, symbol: SYMBOL_MOVIE },\n  read: { re: /è¯»è¿‡/, symbol: SYMBOL_BOOK },\n  reading: { re: /åœ¨è¯»/, symbol: SYMBOL_BOOK },\n}\n\nfor (const item of items) {\n  const title = item.json.title\n  let tag, symbol\n\n  for (const key in tagInfoMap) {\n    const tagInfo = tagInfoMap[key]\n    if (tagInfo.re.test(title)) {\n      tag = key\n      symbol = tagInfo.symbol\n      break\n    }\n  }\n\n  if (tag) {\n    item.json.tag = tag\n    item.json.tgTitle = `${symbol} ${title} #douban #${tag}`\n    newItems.push(item)\n  }\n}\n\nreturn newItems"
      },
      "name": "Function filter",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        860,
        740
      ],
      "id": "9fb66f11-ab75-405d-ab89-f8268f44805c"
    }
  ],
  "pinData": {},
  "connections": {
    "RSS Feed Read": {
      "main": [
        [
          {
            "node": "Function filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Interval": {
      "main": [
        [
          {
            "node": "RSS Feed Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function filter": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ac80d566-88be-4704-8991-0b97ab45d50b",
  "id": "Qo5AGV5a0JRMEvq9",
  "meta": {
    "instanceId": "eceba9f015414307db204126103719f591fd6a69e470e254233d6b955ba93c51"
  },
  "tags": []
}