{
  "name": "github2tg",
  "nodes": [
    {
      "parameters": {},
      "id": "3d31ac8b-bcc3-4841-9711-b7d4465f53ad",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "url": "https://github.com/huhexian.atom"
      },
      "name": "RSS Feed Read",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1,
      "position": [
        680,
        580
      ],
      "id": "2d1d9f16-92a1-4923-a59e-d2584bdaf705"
    },
    {
      "parameters": {
        "functionCode": "/* only return new items */\nconst staticData = getWorkflowStaticData('global');\nconst lastItemId = staticData.lastItemId;\n\nconsole.log('lastItemId', lastItemId);\nconst firstItem = items[0];\nlet newItems = [];\n\nfunction getId(item) {\n  return item.json.guid;\n}\n\nif (lastItemId) {\n  for (const item of items) {\n    if (getId(item) === lastItemId) {\n      break;\n    }\n    newItems.push(item)\n  }\n} else {\n  newItems = [firstItem]\n}\n\nstaticData.lastItemId = getId(firstItem)\nreturn newItems.reverse();"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1020,
        580
      ],
      "id": "5d2d5066-1bca-4ed3-9547-2b257ad4918b",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "chatId": "@hutalk",
        "text": "={{$json[\"tgTitle\"]}}\n\n{{$json[\"link\"]}}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        1180,
        740
      ],
      "id": "a8e22cb4-d954-4fee-97e6-8a6c579721d5",
      "credentials": {
        "telegramApi": {
          "id": "CcgeVvRilGdDx3uG",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "interval": 10,
        "unit": "minutes"
      },
      "name": "Interval",
      "type": "n8n-nodes-base.interval",
      "typeVersion": 1,
      "position": [
        460,
        740
      ],
      "id": "013f9a16-8532-4afb-a949-7c2b5ef5252f"
    },
    {
      "parameters": {
        "functionCode": "/* filter items */\nconst newItems = [];\n\nconst regexes = {\n  'star': /^huhexian starred/,\n  'pull-request': /^huhexian opened a pull request/,\n  'issue': /^huhexian opened an issue/,\n}\nconst tagSymbols = {\n  'star': 'üåü',\n  'pull-request': '‚§¥Ô∏è',\n  'issue': '‚ö°Ô∏è'\n}\n\nfor (const item of items) {\n  const title = item.json.title\n  let tag = ''\n\n  for (const key in regexes) {\n    const regex = regexes[key]\n    if (regex.test(title)) {\n      tag = key\n      break\n    }\n  }\n  if (tag !== '') {\n    item.json.tag = tag\n    item.json.tgTitle = `${tagSymbols[tag]} ${title.replace(/^reorx /, '')} #github #${tag}`\n    item.json.guid = item.json.id\n    newItems.push(item)\n  }\n}\n\nreturn newItems"
      },
      "name": "Function filter",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        860,
        740
      ],
      "id": "a57965e3-06fb-4a08-b164-b04afe0a325e",
      "alwaysOutputData": false
    }
  ],
  "pinData": {},
  "connections": {
    "RSS Feed Read": {
      "main": [
        [
          {
            "node": "Function filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Interval": {
      "main": [
        [
          {
            "node": "RSS Feed Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function filter": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c45d90c9-a887-4cbd-a65b-453be20c34ec",
  "id": "epytQ4eFaE8UEtTb",
  "meta": {
    "instanceId": "eceba9f015414307db204126103719f591fd6a69e470e254233d6b955ba93c51"
  },
  "tags": []
}